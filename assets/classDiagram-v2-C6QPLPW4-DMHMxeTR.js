import{m as tt,c as et,a as nt,u as it,s as st,i as at,b as rt,p as G,d as ot,e as lt,f as F,g as R}from"./chunk-REEJFE46-D3C7bit_.js";import{c as ct,a as M,s as dt}from"./chunk-NGC4727B-BtHA6rNN.js";import{_ as h,l as s,d as m,u as ft,O as ut,P as $,Q as H,v as ht,e as z,R as J,S as B,T as gt}from"./mermaid.core-CXVKNwJq.js";import{s as T,l as W}from"./isEmpty-DrOE0CRk.js";import{G as q}from"./graph-ChHpIDLX.js";import{l as wt}from"./layout-DX5Bo6CE.js";import{w as x}from"./json-Cvdpg1DH.js";import"./line-Ci9EUk7u.js";import"./array-BKyUJesY.js";import"./path-CbwjOpE9.js";import"./index-NXYFgAjv.js";import"./owner-BSI_Vh2r.js";import"./StyledButton-DkLDqqqY.js";import"./proxy-DqEdd0_T.js";import"./_baseUniq-CQvDY-0n.js";import"./_basePickBy-DHAxAhpL.js";import"./clone-D6aGXHSA.js";var f={},v={},Q={},yt=h(()=>{v={},Q={},f={}},"clear"),L=h((e,t)=>(s.trace("In isDescendant",t," ",e," = ",v[t].includes(e)),!!v[t].includes(e)),"isDescendant"),bt=h((e,t)=>(s.info("Descendants of ",t," is ",v[t]),s.info("Edge is ",e),e.v===t||e.w===t?!1:v[t]?v[t].includes(e.v)||L(e.v,t)||L(e.w,t)||v[t].includes(e.w):(s.debug("Tilt, ",t,",not in descendants"),!1)),"edgeInCluster"),V=h((e,t,n,r)=>{s.warn("Copying children of ",e,"root",r,"data",t.node(e),r);const i=t.children(e)||[];e!==r&&i.push(e),s.warn("Copying (nodes) clusterId",e,"nodes",i),i.forEach(a=>{if(t.children(a).length>0)V(a,t,n,r);else{const c=t.node(a);s.info("cp ",a," to ",r," with parent ",e),n.setNode(a,c),r!==t.parent(a)&&(s.warn("Setting parent",a,t.parent(a)),n.setParent(a,t.parent(a))),e!==r&&a!==e?(s.debug("Setting parent",a,e),n.setParent(a,e)):(s.info("In copy ",e,"root",r,"data",t.node(e),r),s.debug("Not Setting parent for node=",a,"cluster!==rootId",e!==r,"node!==clusterId",a!==e));const u=t.edges(a);s.debug("Copying Edges",u),u.forEach(d=>{s.info("Edge",d);const g=t.edge(d.v,d.w,d.name);s.info("Edge data",g,r);try{bt(d,r)?(s.info("Copying as ",d.v,d.w,g,d.name),n.setEdge(d.v,d.w,g,d.name),s.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):s.info("Skipping copy of edge ",d.v,"-->",d.w," rootId: ",r," clusterId:",e)}catch(y){s.error(y)}})}s.debug("Removing node",a),t.removeNode(a)})},"copy"),K=h((e,t)=>{const n=t.children(e);let r=[...n];for(const i of n)Q[i]=e,r=[...r,...K(i,t)];return r},"extractDescendants"),k=h((e,t)=>{s.trace("Searching",e);const n=t.children(e);if(s.trace("Searching children of id ",e,n),n.length<1)return s.trace("This is a valid node",e),e;for(const r of n){const i=k(r,t);if(i)return s.trace("Found replacement for",e," => ",i),i}},"findNonClusterChild"),X=h(e=>!f[e]||!f[e].externalConnections?e:f[e]?f[e].id:e,"getAnchorId"),mt=h((e,t)=>{if(!e||t>10){s.debug("Opting out, no graph ");return}else s.debug("Opting in, graph ");e.nodes().forEach(function(n){e.children(n).length>0&&(s.warn("Cluster identified",n," Replacement id in edges: ",k(n,e)),v[n]=K(n,e),f[n]={id:k(n,e),clusterData:e.node(n)})}),e.nodes().forEach(function(n){const r=e.children(n),i=e.edges();r.length>0?(s.debug("Cluster identified",n,v),i.forEach(a=>{if(a.v!==n&&a.w!==n){const c=L(a.v,n),u=L(a.w,n);c^u&&(s.warn("Edge: ",a," leaves cluster ",n),s.warn("Descendants of XXX ",n,": ",v[n]),f[n].externalConnections=!0)}})):s.debug("Not a cluster ",n,v)});for(let n of Object.keys(f)){const r=f[n].id,i=e.parent(r);i!==n&&f[i]&&!f[i].externalConnections&&(f[n].id=i)}e.edges().forEach(function(n){const r=e.edge(n);s.warn("Edge "+n.v+" -> "+n.w+": "+JSON.stringify(n)),s.warn("Edge "+n.v+" -> "+n.w+": "+JSON.stringify(e.edge(n)));let i=n.v,a=n.w;if(s.warn("Fix XXX",f,"ids:",n.v,n.w,"Translating: ",f[n.v]," --- ",f[n.w]),f[n.v]&&f[n.w]&&f[n.v]===f[n.w]){s.warn("Fixing and trixing link to self - removing XXX",n.v,n.w,n.name),s.warn("Fixing and trixing - removing XXX",n.v,n.w,n.name),i=X(n.v),a=X(n.w),e.removeEdge(n.v,n.w,n.name);const c=n.w+"---"+n.v;e.setNode(c,{domId:c,id:c,labelStyle:"",labelText:r.label,padding:0,shape:"labelRect",style:""});const u=structuredClone(r),d=structuredClone(r);u.label="",u.arrowTypeEnd="none",d.label="",u.fromCluster=n.v,d.toCluster=n.v,e.setEdge(i,c,u,n.name+"-cyclic-special"),e.setEdge(c,a,d,n.name+"-cyclic-special")}else if(f[n.v]||f[n.w]){if(s.warn("Fixing and trixing - removing XXX",n.v,n.w,n.name),i=X(n.v),a=X(n.w),e.removeEdge(n.v,n.w,n.name),i!==n.v){const c=e.parent(i);f[c].externalConnections=!0,r.fromCluster=n.v}if(a!==n.w){const c=e.parent(a);f[c].externalConnections=!0,r.toCluster=n.w}s.warn("Fix Replacing with XXX",i,a,n.name),e.setEdge(i,a,r,n.name)}}),s.warn("Adjusted Graph",x(e)),U(e,0),s.trace(f)},"adjustClustersAndEdges"),U=h((e,t)=>{if(s.warn("extractor - ",t,x(e),e.children("D")),t>10){s.error("Bailing out");return}let n=e.nodes(),r=!1;for(const i of n){const a=e.children(i);r=r||a.length>0}if(!r){s.debug("Done, no node has children",e.nodes());return}s.debug("Nodes = ",n,t);for(const i of n)if(s.debug("Extracting node",i,f,f[i]&&!f[i].externalConnections,!e.parent(i),e.node(i),e.children("D")," Depth ",t),!f[i])s.debug("Not a cluster",i,t);else if(!f[i].externalConnections&&e.children(i)&&e.children(i).length>0){s.warn("Cluster without external connections, without a parent and with children",i,t);let c=e.graph().rankdir==="TB"?"LR":"TB";f[i]?.clusterData?.dir&&(c=f[i].clusterData.dir,s.warn("Fixing dir",f[i].clusterData.dir,c));const u=new q({multigraph:!0,compound:!0}).setGraph({rankdir:c,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});s.warn("Old graph before copy",x(e)),V(i,e,u,i),e.setNode(i,{clusterNode:!0,id:i,clusterData:f[i].clusterData,labelText:f[i].labelText,graph:u}),s.warn("New graph after copy node: (",i,")",x(u)),s.debug("Old graph after copy",x(e))}else s.warn("Cluster ** ",i," **not meeting the criteria !externalConnections:",!f[i].externalConnections," no parent: ",!e.parent(i)," children ",e.children(i)&&e.children(i).length>0,e.children("D"),t),s.debug(f);n=e.nodes(),s.warn("New list of nodes",n);for(const i of n){const a=e.node(i);s.warn(" Now next level",i,a),a.clusterNode&&U(a.graph,t+1)}},"extractor"),Y=h((e,t)=>{if(t.length===0)return[];let n=Object.assign(t);return t.forEach(r=>{const i=e.children(r),a=Y(e,i);n=[...n,...a]}),n},"sorter"),pt=h(e=>Y(e,e.children()),"sortNodesByHierarchy"),vt=h((e,t)=>{s.info("Creating subgraph rect for ",t.id,t);const n=m(),r=e.insert("g").attr("class","cluster"+(t.class?" "+t.class:"")).attr("id",t.id),i=r.insert("rect",":first-child"),a=B(n.flowchart.htmlLabels),c=r.insert("g").attr("class","cluster-label"),u=t.labelType==="markdown"?gt(c,t.labelText,{style:t.labelStyle,useHtmlLabels:a},n):c.node().appendChild(F(t.labelText,t.labelStyle,void 0,!0));let d=u.getBBox();if(B(n.flowchart.htmlLabels)){const o=u.children[0],l=T(u);d=o.getBoundingClientRect(),l.attr("width",d.width),l.attr("height",d.height)}const g=0*t.padding,y=g/2,w=t.width<=d.width+g?d.width+g:t.width;t.width<=d.width+g?t.diff=(d.width-t.width)/2-t.padding/2:t.diff=-t.padding/2,s.trace("Data ",t,JSON.stringify(t)),i.attr("style",t.style).attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-w/2).attr("y",t.y-t.height/2-y).attr("width",w).attr("height",t.height+g);const{subGraphTitleTopMargin:p}=J(n);a?c.attr("transform",`translate(${t.x-d.width/2}, ${t.y-t.height/2+p})`):c.attr("transform",`translate(${t.x}, ${t.y-t.height/2+p})`);const b=i.node().getBBox();return t.width=b.width,t.height=b.height,t.intersect=function(o){return R(t,o)},r},"rect"),xt=h((e,t)=>{const n=e.insert("g").attr("class","note-cluster").attr("id",t.id),r=n.insert("rect",":first-child"),i=0*t.padding,a=i/2;r.attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-t.width/2-a).attr("y",t.y-t.height/2-a).attr("width",t.width+i).attr("height",t.height+i).attr("fill","none");const c=r.node().getBBox();return t.width=c.width,t.height=c.height,t.intersect=function(u){return R(t,u)},n},"noteGroup"),St=h((e,t)=>{const n=m(),r=e.insert("g").attr("class",t.classes).attr("id",t.id),i=r.insert("rect",":first-child"),a=r.insert("g").attr("class","cluster-label"),c=r.append("rect"),u=a.node().appendChild(F(t.labelText,t.labelStyle,void 0,!0));let d=u.getBBox();if(B(n.flowchart.htmlLabels)){const o=u.children[0],l=T(u);d=o.getBoundingClientRect(),l.attr("width",d.width),l.attr("height",d.height)}d=u.getBBox();const g=0*t.padding,y=g/2,w=t.width<=d.width+t.padding?d.width+t.padding:t.width;t.width<=d.width+t.padding?t.diff=(d.width+t.padding*0-t.width)/2:t.diff=-t.padding/2,i.attr("class","outer").attr("x",t.x-w/2-y).attr("y",t.y-t.height/2-y).attr("width",w+g).attr("height",t.height+g),c.attr("class","inner").attr("x",t.x-w/2-y).attr("y",t.y-t.height/2-y+d.height-1).attr("width",w+g).attr("height",t.height+g-d.height-3);const{subGraphTitleTopMargin:p}=J(n);a.attr("transform",`translate(${t.x-d.width/2}, ${t.y-t.height/2-t.padding/3+(B(n.flowchart.htmlLabels)?5:3)+p})`);const b=i.node().getBBox();return t.height=b.height,t.intersect=function(o){return R(t,o)},r},"roundedWithTitle"),Nt=h((e,t)=>{const n=e.insert("g").attr("class",t.classes).attr("id",t.id),r=n.insert("rect",":first-child"),i=0*t.padding,a=i/2;r.attr("class","divider").attr("x",t.x-t.width/2-a).attr("y",t.y-t.height/2).attr("width",t.width+i).attr("height",t.height+i);const c=r.node().getBBox();return t.width=c.width,t.height=c.height,t.diff=-t.padding/2,t.intersect=function(u){return R(t,u)},n},"divider"),Et={rect:vt,roundedWithTitle:St,noteGroup:xt,divider:Nt},Z={},Ct=h((e,t)=>{s.trace("Inserting cluster");const n=t.shape||"rect";Z[t.id]=Et[n](e,t)},"insertCluster"),Tt=h(()=>{Z={}},"clear"),j=h(async(e,t,n,r,i,a)=>{s.info("Graph in recursive render: XXX",x(t),i);const c=t.graph().rankdir;s.trace("Dir in recursive render - dir:",c);const u=e.insert("g").attr("class","root");t.nodes()?s.info("Recursive render XXX",t.nodes()):s.info("No nodes found for",t),t.edges().length>0&&s.trace("Recursive edges",t.edge(t.edges()[0]));const d=u.insert("g").attr("class","clusters"),g=u.insert("g").attr("class","edgePaths"),y=u.insert("g").attr("class","edgeLabels"),w=u.insert("g").attr("class","nodes");await Promise.all(t.nodes().map(async function(o){const l=t.node(o);if(i!==void 0){const S=JSON.parse(JSON.stringify(i.clusterData));s.info("Setting data for cluster XXX (",o,") ",S,i),t.setNode(i.id,S),t.parent(o)||(s.trace("Setting parent",o,i.id),t.setParent(o,i.id,S))}if(s.info("(Insert) Node XXX"+o+": "+JSON.stringify(t.node(o))),l?.clusterNode){s.info("Cluster identified",o,l.width,t.node(o));const{ranksep:S,nodesep:E}=t.graph();l.graph.setGraph({...l.graph.graph(),ranksep:S,nodesep:E});const D=await j(w,l.graph,n,r,t.node(o),a),N=D.elem;it(l,N),l.diff=D.diff||0,s.info("Node bounds (abc123)",o,l,l.width,l.x,l.y),st(N,l),s.warn("Recursive render complete ",N,l)}else t.children(o).length>0?(s.info("Cluster - the non recursive path XXX",o,l.id,l,t),s.info(k(l.id,t)),f[l.id]={id:k(l.id,t),node:l}):(s.info("Node - the non recursive path",o,l.id,l),await at(w,t.node(o),{config:a,dir:c}))})),t.edges().forEach(async function(o){const l=t.edge(o.v,o.w,o.name);s.info("Edge "+o.v+" -> "+o.w+": "+JSON.stringify(o)),s.info("Edge "+o.v+" -> "+o.w+": ",o," ",JSON.stringify(t.edge(o))),s.info("Fix",f,"ids:",o.v,o.w,"Translating: ",f[o.v],f[o.w]),await rt(y,l)}),t.edges().forEach(function(o){s.info("Edge "+o.v+" -> "+o.w+": "+JSON.stringify(o))}),s.info("Graph before layout:",JSON.stringify(x(t))),s.info("#############################################"),s.info("###                Layout                 ###"),s.info("#############################################"),s.info(t),wt(t),s.info("Graph after layout:",JSON.stringify(x(t)));let p=0;const{subGraphTitleTotalMargin:b}=J(a);return pt(t).forEach(function(o){const l=t.node(o);s.info("Position "+o+": "+JSON.stringify(t.node(o))),s.info("Position "+o+": ("+l.x,","+l.y,") width: ",l.width," height: ",l.height),l?.clusterNode?(l.y+=b,G(l)):t.children(o).length>0?(l.height+=b,Ct(d,l),f[l.id].node=l):(l.y+=b/2,G(l))}),t.edges().forEach(function(o){const l=t.edge(o);s.info("Edge "+o.v+" -> "+o.w+": "+JSON.stringify(l),l),l.points.forEach(E=>E.y+=b/2);const S=ot(g,o,l,f,n,t,r);lt(l,S)}),t.nodes().forEach(function(o){const l=t.node(o);s.info(o,l.type,l.diff),l.type==="group"&&(p=l.diff)}),{elem:u,diff:p}},"recursiveRender"),kt=h(async(e,t,n,r,i)=>{tt(e,n,r,i),et(),nt(),Tt(),yt(),s.warn("Graph at first:",JSON.stringify(x(t))),mt(t),s.warn("Graph after:",JSON.stringify(x(t)));const a=m();await j(e,t,r,i,void 0,a)},"render"),O=h(e=>z.sanitizeText(e,m()),"sanitizeText"),_={dividerMargin:10,padding:5,textHeight:10,curve:void 0},Dt=h(function(e,t,n,r){s.info("keys:",[...e.keys()]),s.info(e),e.forEach(function(i){const c={shape:"rect",id:i.id,domId:i.domId,labelText:O(i.id),labelStyle:"",style:"fill: none; stroke: black",padding:m().flowchart?.padding??m().class?.padding};t.setNode(i.id,c),I(i.classes,t,n,r,i.id),s.info("setNode",c)})},"addNamespaces"),I=h(function(e,t,n,r,i){s.info("keys:",[...e.keys()]),s.info(e),[...e.values()].filter(a=>a.parent===i).forEach(function(a){const c=a.cssClasses.join(" "),u=$(a.styles),d=a.label??a.id,g=0,w={labelStyle:u.labelStyle,shape:"class_box",labelText:O(d),classData:a,rx:g,ry:g,class:c,style:u.style,id:a.id,domId:a.domId,tooltip:r.db.getTooltip(a.id,i)||"",haveCallback:a.haveCallback,link:a.link,width:a.type==="group"?500:void 0,type:a.type,padding:m().flowchart?.padding??m().class?.padding};t.setNode(a.id,w),i&&t.setParent(a.id,i),s.info("setNode",w)})},"addClasses"),Xt=h(function(e,t,n,r){s.info(e),e.forEach(function(i,a){const c=i,u="",d={labelStyle:"",style:""},g=c.text,y=0,p={labelStyle:d.labelStyle,shape:"note",labelText:O(g),noteData:c,rx:y,ry:y,class:u,style:d.style,id:c.id,domId:c.id,tooltip:"",type:"note",padding:m().flowchart?.padding??m().class?.padding};if(t.setNode(c.id,p),s.info("setNode",p),!c.class||!r.has(c.class))return;const b=n+a,o={id:`edgeNote${b}`,classes:"relation",pattern:"dotted",arrowhead:"none",startLabelRight:"",endLabelLeft:"",arrowTypeStart:"none",arrowTypeEnd:"none",style:"fill:none",labelStyle:"",curve:H(_.curve,W)};t.setEdge(c.id,c.class,o,b)})},"addNotes"),Bt=h(function(e,t){const n=m().flowchart;let r=0;e.forEach(function(i){r++;const a={classes:"relation",pattern:i.relation.lineType==1?"dashed":"solid",id:ht(i.id1,i.id2,{prefix:"id",counter:r}),arrowhead:i.type==="arrow_open"?"none":"normal",startLabelRight:i.relationTitle1==="none"?"":i.relationTitle1,endLabelLeft:i.relationTitle2==="none"?"":i.relationTitle2,arrowTypeStart:A(i.relation.type1),arrowTypeEnd:A(i.relation.type2),style:"fill:none",labelStyle:"",curve:H(n?.curve,W)};if(s.info(a,i),i.style!==void 0){const c=$(i.style);a.style=c.style,a.labelStyle=c.labelStyle}i.text=i.title,i.text===void 0?i.style!==void 0&&(a.arrowheadStyle="fill: #333"):(a.arrowheadStyle="fill: #333",a.labelpos="c",m().flowchart?.htmlLabels??m().htmlLabels?(a.labelType="html",a.label='<span class="edgeLabel">'+i.text+"</span>"):(a.labelType="text",a.label=i.text.replace(z.lineBreakRegex,`
`),i.style===void 0&&(a.style=a.style||"stroke: #333; stroke-width: 1.5px;fill:none"),a.labelStyle=a.labelStyle.replace("color:","fill:"))),t.setEdge(i.id1,i.id2,a,r)})},"addRelations"),Lt=h(function(e){_={..._,...e}},"setConf"),Rt=h(async function(e,t,n,r){s.info("Drawing class - ",t);const i=m().flowchart??m().class,a=m().securityLevel;s.info("config:",i);const c=i?.nodeSpacing??50,u=i?.rankSpacing??50,d=new q({multigraph:!0,compound:!0}).setGraph({rankdir:r.db.getDirection(),nodesep:c,ranksep:u,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}}),g=r.db.getNamespaces(),y=r.db.getClasses(),w=r.db.getRelations(),p=r.db.getNotes();s.info(w),Dt(g,d,t,r),I(y,d,t,r),Bt(w,d),Xt(p,d,w.length+1,y);let b;a==="sandbox"&&(b=T("#i"+t));const o=a==="sandbox"?T(b.nodes()[0].contentDocument.body):T("body"),l=o.select(`[id="${t}"]`),S=o.select("#"+t+" g");if(await kt(S,d,["aggregation","extension","composition","dependency","lollipop"],"classDiagram",t),ft.insertTitle(l,"classTitleText",i?.titleTopMargin??5,r.db.getDiagramTitle()),ut(d,l,i?.diagramPadding,i?.useMaxWidth),!i?.htmlLabels){const E=a==="sandbox"?b.nodes()[0].contentDocument:document,D=E.querySelectorAll('[id="'+t+'"] .edgeLabel .label');for(const N of D){const P=N.getBBox(),C=E.createElementNS("http://www.w3.org/2000/svg","rect");C.setAttribute("rx",0),C.setAttribute("ry",0),C.setAttribute("width",P.width),C.setAttribute("height",P.height),N.insertBefore(C,N.firstChild)}}},"draw");function A(e){let t;switch(e){case 0:t="aggregation";break;case 1:t="extension";break;case 2:t="composition";break;case 3:t="dependency";break;case 4:t="lollipop";break;default:t="none"}return t}h(A,"getArrowMarker");var _t={setConf:Lt,draw:Rt},Zt={parser:ct,db:M,renderer:_t,styles:dt,init:h(e=>{e.class||(e.class={}),e.class.arrowMarkerAbsolute=e.arrowMarkerAbsolute,M.clear()},"init")};export{Zt as diagram};
